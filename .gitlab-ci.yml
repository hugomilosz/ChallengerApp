image: node:latest

stages:
  - install
  - build
  - test
  - lint
  - deploy

cache:
 key: modules
 paths:
  - node_modules/

install:
  stage: install
  artifacts:
    paths:
      - node_modules 
  cache:
    key: modules
    paths:
      - node_modules/
  after_script:
    - node -v && npm -v
  script:
    - npm cache clean --force
    - npm rebuild
    - npm install

build:
  image: node:latest
  stage: build
  cache:
    key: modules
    paths:
      - node_modules/
    policy: pull
  artifacts:
      paths:
        - public
  script:
    - npm run build
    - echo "Build Successfully!"

unit-test:
  image: node:latest
  stage: test
  cache:
    key: modules
    paths:
      - node_modules/
    policy: pull
  script:
    - npm run test:ci
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    paths:
      - coverage/
      - public
    when: always
    reports:
      junit:
        - junit.xml

lint:
  image: node:latest
  stage: lint
  cache:
    key: modules
    paths:
      - node_modules/
    policy: pull
  script:
    - npm run lint
    - echo "All style good!"
  artifacts:
      paths:
        - public

deploy:
  only:
    - master
  stage: deploy
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=challenger --api-key=$HEROKU_TOKEN
